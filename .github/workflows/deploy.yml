name: Deploy app

on:
  push:
#    branches:
#      - main
    # TODO: remove this line
    branches-ignore:
      - main

jobs:
  build-callback-zip:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./meeting-bot-callback
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Create dir to store dependencies
        run: mkdir -p package

      - name: Install dependencies
        run: pip install -r requirements.txt --target=package

      - name: Create ZIP archive
        run: |
          ls -la
          cp -r app package/
          cp main.py package/
          cd package/
          ls -la
          zip -r ../callback.zip *

      - name: Upload ZIP archive
        uses: actions/upload-artifact@v4
        with:
          name: callback
          path: meeting-bot-callback/callback.zip

  deploy-callback:
    runs-on: ubuntu-latest
    needs: build-callback-zip
    outputs:
      callback_schedule_arn: ${{ steps.callback_schedule_arn.outputs.CALLBACK_SCHEDULE_ARN }}
      role_arn: ${{ steps.role_arn.outputs.ROLE_ARN }}
    defaults:
      run:
        working-directory: ./meeting-bot-deployment/callback
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-skip-session-tagging: true
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.4

      - name: Download ZIP archive
        uses: actions/download-artifact@v4
        with:
          name: callback
          path: meeting-bot-deployment/callback/zip

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_meeting_bot_callback_zip_name: zip/callback.zip
          TF_VAR_webhook_url: ${{ secrets.WEBHOOK_URL }}

      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: patacoing
          minimum-approvals: 1
          issue-title: "Deploying Callback to prod"
          issue-body: "Review the terraform plan, then approve or deny the deployment of Callback to prod."
          exclude-workflow-initiator-as-approver: false

      - name: Terraform apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_meeting_bot_callback_zip_name: zip/callback.zip
          TF_VAR_webhook_url: ${{ secrets.WEBHOOK_URL }}

      - name: Terraform output callback_schedule_arn
        id: callback_schedule_arn
        run: |
          echo "CALLBACK_SCHEDULE_ARN=$(terraform output -raw function_arn)" >> "$GITHUB_OUTPUT"

      - name: Terraform output role_arn
        id: role_arn
        run: |
          echo "ROLE_ARN=$(terraform output -raw role_arn)" >> "$GITHUB_OUTPUT"

  build-api-zip:
    runs-on: ubuntu-latest
    needs: build-callback-zip
    defaults:
      run:
        working-directory: ./meeting-bot-api
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Create dir to store dependencies
        run: mkdir -p package

      - name: Install dependencies
        run: pip install -r requirements.txt --target=package

      - name: Create ZIP archive
        run: |
          ls -la
          cp -r app package/
          cp main.py package/
          cd package/
          ls -la
          zip -r ../api.zip *

      - name: Upload ZIP archive
        uses: actions/upload-artifact@v4
        with:
          name: api
          path: meeting-bot-api/api.zip

  deploy-api:
    runs-on: ubuntu-latest
    needs:
      - build-api-zip
      - deploy-callback
    defaults:
      run:
        working-directory: ./meeting-bot-deployment/api
    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-skip-session-tagging: true
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.4

      - name: Download ZIP archive
        uses: actions/download-artifact@v4
        with:
          name: callback
          path: meeting-bot-deployment/callback/zip

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_meeting_bot_callback_zip_name: zip/callback.zip
          TF_VAR_app_id: ${{ secrets.APP_ID }}
          TF_VAR_server_id: ${{ secrets.SERVER_ID }}
          TF_VAR_callback_schedule_arn: ${{ needs.deploy-callback.outputs.callback_schedule_arn }}
          TF_VAR_role_arn: ${{ needs.deploy-callback.outputs.role_arn }}

      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: patacoing
          minimum-approvals: 1
          issue-title: "Deploying Callback to prod"
          issue-body: "Review the terraform plan, then approve or deny the deployment of Callback to prod."
          exclude-workflow-initiator-as-approver: false

      - name: Terraform apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_meeting_bot_callback_zip_name: zip/callback.zip
          TF_VAR_app_id: ${{ secrets.APP_ID }}
          TF_VAR_server_id: ${{ secrets.SERVER_ID }}
          TF_VAR_callback_schedule_arn: ${{ needs.deploy-callback.outputs.callback_schedule_arn }}
          TF_VAR_role_arn: ${{ needs.deploy-callback.outputs.role_arn }}

      - name: Terraform output
        run: terraform output