name: Deploy app

on:
  push:
#    branches:
#      - main
    # TODO: remove this line
    branches-ignore:
      - main

jobs:
  build-callback-zip:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./meeting-bot-callback
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Create dir to store dependencies
        run: mkdir -p package

      - name: Install dependencies
        run: pip install -r requirements.txt --target=package

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
          directory: meeting-bot-callback

      - name: Create ZIP archive
        run: |
          ls -la
          cp -r app package/
          cp main.py package/
          cp .env package/
          cd package/
          zip -r ../callback.zip *
          cd ../

      - name: Upload ZIP archive
        uses: actions/upload-artifact@v4
        with:
          name: callback
          path: meeting-bot-callback/callback.zip

  deploy-callback:
    runs-on: ubuntu-latest
    needs: build-callback-zip
    defaults:
      run:
        working-directory: ./meeting-bot-deployment/callback
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.4

      - name: Download ZIP archive
        uses: actions/download-artifact@v4
        with:
          name: callback
          path: meeting-bot-callback/callback.zip

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_meeting_bot_callback_zip_name: callback.zip

      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: patacoing
          minimum-approvals: 1
          issue-title: "Deploying Callback to prod"
          issue-body: "Review the terraform plan, then approve or deny the deployment of Callback to prod."
          exclude-workflow-initiator-as-approver: false

      - name: Terraform apply
        run: terraform apply
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_meeting_bot_callback_zip_name: callback.zip

      - name: Terraform output
        run: terraform output




#  build-api-zip:
#    runs-on: ubuntu-latest
#    needs: build-callback-zip
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up Python 3.11
#        uses: actions/setup-python@v3
#        with:
#          python-version: "3.11"
#
#      - name: Move to app directory
#        run: cd meeting-bot-api
#
#      - name: Create dir to store dependencies
#        run: mkdir -p package
#
#      - name: Install dependencies
#        run: pip install -r requirements.txt --target=package
#
#      - name: Make envfile
#        uses: SpicyPizza/create-envfile@v2.0
#        with:
#          envkey_APP_ID: ${{ secrets.APP_ID }}
#          envkey_SERVER_ID: ${{ secrets.SERVER_ID }}
#          envkey_CLIENT_PUBLIC_KEY: ${{ secrets.CLIENT_PUBLIC_KEY }}
#          envkey_CALLBACK_SCHEDULE_ARN: $(terraform output callback_schedule_arn)
#          envkey_ROLE_ARN: "" # TODO: use output of tf
#
#      - name: Create ZIP archive
#        run: |
#          cp -r app package/
#          cp main.py package/
#          cp .env package/
#          cd package/
#          zip -r ../callback.zip *
#          cd ../
#
#      - name: Upload ZIP archive
#        uses: actions/upload-artifact@v4
#        with:
#          name: api
#          path: api.zip
#
#  deploy-api:
#    runs-on: ubuntu-latest
#    needs: build-api-zip
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Setup Terraform
#        uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.8.4
#
#      - name: Move to deployment directory
#        run: cd meeting-bot-deployment/api
#
#      - name: Download ZIP archive
#        uses: actions/download-artifact@v4
#        with:
#          name: api
#          path: api.zip
#
#      - name: Terraform init
#        run: terraform init
#
#      - name: Terraform plan
#        run: terraform plan
#
#      - uses: trstringer/manual-approval@v1
#        with:
#          secret: ${{ github.TOKEN }}
#          approvers: patacoing
#          minimum-approvals: 1
#          issue-title: "Deploying Api to prod"
#          issue-body: "Review the terraform plan, then approve or deny the deployment of Api to prod."
#          exclude-workflow-initiator-as-approver: false
#
#      - name: Terraform apply
#        run: terraform apply